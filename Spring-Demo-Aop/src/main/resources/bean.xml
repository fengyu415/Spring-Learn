<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.feng" />
    <context:annotation-config/>
    <!--注册bean-->
    <bean id="userService" class="com.feng.service.UserServiceImpl"/>
    <bean id="BeforLog" class="com.feng.AopLog.BeforLog"/>
    <bean id="AfterLog" class="com.feng.AopLog.AfterLog"/>
    <!--第三种方式:注解实现-->
    <bean id="annotationPointcut" class="com.feng.AopLog.AnnotationPointcut"/>
    <aop:aspectj-autoproxy/>
    <!--第一种方式-->
    <!--aop的配置-->
    <aop:config>
        <!--切入点 expression:表达式匹配要执行的方法-->
        <aop:pointcut id="pointcut" expression="execution(* com.feng.service.UserServiceImpl.*(..))"/>
        <!--执行环绕; advice-ref执行方法 . pointcut-ref切入点-->
        <aop:advisor advice-ref="BeforLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="AfterLog" pointcut-ref="pointcut"/>
    </aop:config>

    <!--第二种方式：使用AOP的标签实现-->
    <!--aop的配置-->
    <aop:config>
       <aop:aspect ref="diyPointcut">
           <!--切入点 expression:表达式匹配要执行的方法-->
           <aop:pointcut id="Ponitcut" expression="execution(* com.feng.service.UserServiceImpl.*(..))"/>
           <!--执行环绕; advice-ref执行方法 . pointcut-ref切入点-->
           <aop:before pointcut-ref="Ponitcut" method="beformethod"/>
           <aop:after pointcut-ref="Ponitcut" method="aftermethod"/>
       </aop:aspect>
    </aop:config>

</beans>